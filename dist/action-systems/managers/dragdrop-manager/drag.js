import{call as r}from"./call.js";async function l(a,t){const n=await crs.call("dom_interactive","get_animation_layer"),e=await o[t.drag.clone](a,t);return e.style.translate=`${a._bounds.x}px ${a._bounds.y}px`,e.style.filter="drop-shadow(0 0 5px #00000080)",n.appendChild(e),e}class o{static async element(t){return t}static async template(t,n){let e=n.drag.template;e==null&&(e=document.querySelector(`#${t.dataset.template}`));const s=e.content.cloneNode(!0).children[0];return s._bounds=t._bounds,s._dragElement=t,s}}async function c(a){if(this._updateDragHandler==null)return;const t=this._dragElement._bounds.x+(this._movePoint.x-this._startPoint.x),n=this._dragElement._bounds.y+(this._movePoint.y-this._startPoint.y);this._dragElement.style.translate=`${t}px ${n}px`,this._target?.dataset?.hover!=null&&this._options.hover!=null&&await r(this._options.hover,this._dragElement,this._target,a),requestAnimationFrame(this._updateDragHandler)}export{l as startDrag,c as updateDrag};
