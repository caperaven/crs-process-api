class f{static#t=Object.freeze({left:this.#e,right:this.#i,top:this.#a,bottom:this.#r});static async perform(t,e,i,a){await this[t.action]?.(t,e,i,a)}static async set(t,e,i,a){const r=await crs.dom.get_element(t.args.element,e,i,a),s=await crs.dom.get_element(t.args.target,e,i,a),l=await crs.process.getValue(t.args.at||"bottom",e,i,a),g=await crs.process.getValue(t.args.anchor,e,i,a),n=await crs.process.getValue(t.args.margin||0,e,i,a);r.style.position="fixed",r.style.left=0,r.style.top=0;const c=r.getBoundingClientRect(),y=s.getBoundingClientRect();let h=this.#t[l](c,y,n,g);h=this.#h(h,c.width,c.height),r.style.translate=`${h.x}px ${h.y}px`}static#e(t,e,i,a){return{x:e.left-t.width-i,y:a=="bottom"?e.bottom-t.height:e.top}}static#i(t,e,i,a){return{x:e.left+e.width+i,y:a=="bottom"?e.bottom-t.height:e.top}}static#a(t,e,i,a){return{x:a=="right"?e.right-t.width:e.left,y:e.top-t.height-i}}static#r(t,e,i,a){return{x:a=="right"?e.right-t.width:e.left,y:e.top+e.height+i}}static#h(t,e,i){return t.x<0&&(t.x=1),t.x+e>screen.width&&(t.x=screen.width-e-1),t.y<0&&(t.y=1),t.y+i>screen.height&&(t.y=screen.height-i-1),t}}crs.intent.fixed_layout=f;export{f as FixedLayoutActions};
