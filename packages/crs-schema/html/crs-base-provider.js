class s{constructor(s){this.parser=s}async dispose(){delete this.parser}async shouldParse(s){return!0}async process(s){null!=this.styles&&(s.styles=[]);return{children:await this.parser.parseChildren(s),attributes:await this.parser.parseAttributes(s),styles:await this.parser.parseStyles(s),content:await this.parser.parseContent(s)}}async setValues(s,t){const e=Object.keys(t);for(let a of e){const e=null!=t[a]?t[a]:"";s=s.split(a).join(e)}return s}async validate(s,t){if(null!=s.elements)for(let e of s.elements)await this.parser.validateItem(e,t)}async assert(s,t,e){const a=1==await s();return a&&t.push(e),!a}}export{s as BaseProvider};
