const t=Object.freeze({WORD:"word",LITERAL:"literal",FUNCTION:"function",PROPERTY:"property",OBJECT:"object",KEYWORD:"keyword",OPERATOR:"operator",NUMBER:"number",SPACE:"space",STRING:"string"});function y(e,c){const R=[];let n=[],i=0;function r(f,l){if(n.length>0){const u=n.join("");a(u)}R.push({type:f,value:l})}function a(f){let l=t.WORD;T.indexOf(f)!=-1&&(l=t.KEYWORD),isNaN(Number(f))==!1&&(l=t.NUMBER),R.push({type:l,value:f}),n.length=0}for(i;i<e.length;i++){const f=e[i];if(f==" "){r(t.SPACE," ");continue}if(f=="`"){r(t.LITERAL,"`");continue}if(f=="$"&&e[i+1]=="{"){r(t.KEYWORD,"${"),i++;continue}if(f=="'"||f=='"'){const l=i+e.length-i;let u=!1;if(e[i+1]==null){r(t.STRING,f);break}let O=i+1;for(O;O<l;O++){if(e[O]=="$"&&e[O+1]=="{"){u=!0;break}if(e[O]==f){const p=e.substring(i,O+1);r(t.STRING,p);break}}u==!0?r(t.STRING,f):i=O;continue}if(T.indexOf(f)!=-1){r(t.KEYWORD,f);continue}if(o.indexOf(f)!=-1){for(let l=i;l<i+4;l++){const u=e[l];if(o.indexOf(u)==-1){const O=e.substring(i,l);r(t.OPERATOR,O),i=l-1;break}}continue}n.push(f)}return n.length>0&&a(n.join("")),E(R,c)}function E(e,c){if(e.length==1&&e[0].type==t.WORD)return e[0].type=t.PROPERTY,e;let R=[],n=0;for(;e[n]!=null;){const i=e[n],r=R.length==0?"none":R[R.length-1],a=i.value.indexOf(".");if(i.type==t.WORD)if(r==t.LITERAL){if(i.value[0]=="."&&e[n+1].value=="("){i.type=t.FUNCTION,n++;continue}i.type=t.PROPERTY}else a!=-1?e[n-1]?.value===")"&&a===0?i.type=t.FUNCTION:i.type=t.PROPERTY:s(e[n+1])||s(e[n+2])?c!==!0&&r!==t.OBJECT&&(i.type=t.PROPERTY):c!==!0&&s(e[n-1])||s(e[n-2])?r!==t.OBJECT&&(i.type=t.PROPERTY):n===0&&e[n+1]?.value==="("&&(i.type=t.PROPERTY);if(i.type==t.KEYWORD&&i.value=="("&&e[n-1]&&e[n-1].type==t.PROPERTY&&e[n-1].value[0]!="$"){const f=e[n-1].value;if(f.indexOf(".")==-1)e[n-1].type=t.FUNCTION;else{let l=f.length-1;for(let u=f.length-1;u>=0;u--)if(f[u]=="."){l=u;break}if(l>0){const u=f.substring(0,l),O=f.substring(l,f.length);e[n-1].value=u,e.splice(n,0,{type:t.FUNCTION,value:O}),n++}else e[n-1].type=t.FUNCTION}}i.value=="${"?R.push(t.LITERAL):i.value=="{"?R.push(t.OBJECT):i.value=="}"&&R.pop(),n++}return e[0].type===t.FUNCTION&&(e[0].type=t.PROPERTY),e}function s(e){return e==null?!1:e.type==t.OPERATOR}const o=["=","!","<",">","+","-","*","/","&","|","?",":"],T=["{","}","(",")",",","true","false","null","undefined","[]"];export{y as tokenize};
