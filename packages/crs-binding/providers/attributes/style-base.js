class l{#e={};get store(){return this.#e}async parse(e,s,n){const r=e.name.split("."),t=e.ownerElement;t.removeAttribute(e.name);const o=r[1];crs.binding.utils.markElement(t,s);const i=await n(e.value),c=this.#e[t.__uuid]||={};c[o]=i.key,crs.binding.data.setCallback(t.__uuid,s.bid,i.parameters.properties,this.providerKey)}async update(e){if(this.#e[e]==null)return;const s=crs.binding.elements[e],n=crs.binding.data.getDataForElement(s);for(const[r,t]of Object.entries(this.#e[e])){const i=await crs.binding.functions.get(t).function(n);s.style[r]=i}}async clear(e){const s=this.#e[e];if(s!=null){for(const n of Object.values(s)){const r=crs.binding.functions.get(n);crs.binding.expression.release(r)}delete this.#e[e]}}}export{l as StyleBase};
