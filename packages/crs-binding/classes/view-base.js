class s{#t;#e;get title(){return this.getProperty("title")}set title(t){this.setProperty("title",t)}get bid(){return this.#e}get element(){return this.#t}set element(t){this.#t=t,this.#t.dataset.ready="false",this.#t.__bid=this.#e}constructor(){this.#e=crs.binding.data.addObject(this.constructor.name),crs.binding.data.addContext(this.#e,this)}async connectedCallback(){return new Promise(async t=>{this.preLoad!=null&&await this.preLoad();const e=crs.binding.utils.getPathOfFile(this.html);requestAnimationFrame(async()=>{await crs.binding.parsers.parseElements(this.element.children,this,e?{folder:e}:null),await crs.binding.data.updateContext(this.#e),await this.load()}),t()})}async disconnectedCallback(){await crs.binding.data.remove(this.#e),crs.binding.utils.unmarkElement(this.#t),this.#t=null}getProperty(t,e=!0){return crs.binding.data.getProperty(this,t,e)}setProperty(t,e,i=!0){crs.binding.data.setProperty(this,t,e,i)}async load(){this.#t.style.visibility="",this.#t.dataset.ready="true"}}crs.classes.ViewBase=s;export{s as ViewBase};
