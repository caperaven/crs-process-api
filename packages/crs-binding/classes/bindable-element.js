class e extends HTMLElement{#t;get shadowDom(){return!1}get hasOwnContext(){return!0}get bid(){return this.#t}constructor(){super(),this.shadowDom==!0&&this.attachShadow({mode:"open"}),this.hasOwnContext==!0&&(this.#t=crs.binding.data.addObject(this.constructor.name),crs.binding.data.addContext(this.#t,this)),crs.binding.dom.enableEvents(this)}dispose(){crs.binding.dom.disableEvents(this),crs.binding.utils.disposeProperties(this)}async connectedCallback(){await this.preLoad?.(),await d(this),await r(this),await n(this),this.dataset.ready="true",this.dispatchEvent(new CustomEvent("ready",{bubbles:!1}))}async disconnectedCallback(){this.dispose(),crs.binding.utils.unmarkElement(this),crs.binding.utils.disposeProperties(this),await crs.binding.templates.remove(this.constructor.name),await crs.binding.data.remove(this.#t)}getProperty(i){return crs.binding.data.getProperty(this,i)}setProperty(i,s){crs.binding.data.setProperty(this,i,s)}}function a(t){const i=t.mobi;return i!=null&&/Mobi/.test(navigator.userAgent)?i:t.html}async function n(t){requestAnimationFrame(()=>{const i=t.getAttribute("id");i!=null&&crs.binding.data.setName(t.bid,i)})}async function r(t){t.load!=null&&await t.load.call(t)}async function d(t){if(t.html==null)return;const i=await crs.binding.templates.get(t.constructor.name,a(t));t.shadowRoot!=null?t.shadowRoot.innerHTML=i:t.innerHTML=i,await crs.binding.parsers.parseElements(t.shadowRoot?t.shadowRoot.children:t.children,t),await crs.binding.data.updateContext(t.bid)}crs.classes.BindableElement=e;export{e as BindableElement};
