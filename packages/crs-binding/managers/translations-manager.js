class l{#t={};async add(t,i){n(i||"",t,this.#t)}async delete(t){const i=`${t}.`,a=Object.keys(this.#t).filter(s=>s.indexOf(i)===0);for(let s of a)delete this.#t[s]}async parseElement(t){t.children.length==0&&t.textContent.indexOf("&{")!=-1&&(t.textContent=await this.get_with_markup(t.textContent.trim()));for(let i of t.attributes)await this.parseAttribute(i);for(let i of t.children)await this.parseElement(i)}async parseAttribute(t){t.value.indexOf("&{")!==-1&&(t.value=await this.get_with_markup(t.value))}async get(t){let i=this.#t[t];return i!=null||(i=this.fetch==null?null:await this.fetch(t),i!=null&&(this.#t[t]=i)),i}async get_with_markup(t){return t=t.split("&{").join("").split("}").join(""),await this.get(t)}}function n(e,t,i){if(typeof t=="string")e[0]==="."&&(e=e.substring(1)),i[e]=t;else{const a=Object.keys(t);for(let s of a)n(`${e}.${s}`,t[s],i)}}export{l as TranslationsManager};
