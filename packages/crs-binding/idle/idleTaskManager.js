import"./idleCallback.js";class r{#s=[];constructor(){this.processing=!1}dispose(){this.#s=null}async#t(){this.processing=!0;try{requestIdleCallback(async()=>{for(;this.#s.length>0;){const s=this.#s.shift();try{await s()}catch(t){console.error(t)}}},{timeout:1e3})}finally{this.processing=!1}}async add(s){if(typeof s=="function"){if(requestIdleCallback==null)return await s();this.#s.push(s),this.processing!=!0&&await this.#t()}}}export{r as IdleTaskManager};
